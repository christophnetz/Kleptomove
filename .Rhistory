group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.2) +
scale_colour_brewer(palette = "Set1")+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme(legend.position = "none")+
coord_cartesian(expand = F)+
scale_y_log10(labels = scales::comma)
#### make some plot ####
ggplot(data) +
geom_ribbon(aes(cell_capacity,
ymin = mean + 1 - sd,
ymax = mean + 1 + sd,
group = interaction(repl, layer),
fill = layer),
alpha = 0.2)+
geom_line(aes(cell_capacity, mean + 1,
group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.2) +
scale_colour_brewer(palette = "Set1")+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme(legend.position = "none")+
coord_cartesian(expand = F)+
scale_y_log10(labels = scales::comma)+
labs(x = "cell carrying capacity",
y = "mean value")
#### make some plot ####
ggplot(data) +
geom_ribbon(aes(cell_capacity,
ymin = mean + 1 - sd,
ymax = mean + 1 + sd,
group = interaction(repl, layer),
fill = layer),
alpha = 0.2)+
geom_line(aes(cell_capacity, mean + 1,
group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.2) +
scale_colour_brewer(palette = "Set1")+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme(legend.position = "none")+
coord_cartesian(expand = F)+
scale_y_log10(labels = scales::comma)+
labs(x = "cell carrying capacity",
y = "mean value")
#### make some plot ####
ggplot(data) +
geom_ribbon(aes(cell_capacity,
ymin = mean + 1 - sd,
ymax = mean + 1 + sd,
group = interaction(repl, layer),
fill = layer),
alpha = 0.2)+
geom_line(aes(cell_capacity, mean + 1,
group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.5) +
scale_colour_brewer(palette = "Set1")+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme(legend.position = "none")+
coord_cartesian(expand = F)+
scale_y_log10(labels = scales::comma)+
labs(x = "cell carrying capacity",
y = "mean value")
#### make some plot ####
ggplot(data) +
geom_ribbon(aes(cell_capacity,
ymin = mean + 1 - sd,
ymax = mean + 1 + sd,
group = interaction(repl, layer),
fill = layer),
alpha = 0.2)+
geom_line(aes(cell_capacity, mean + 1,
group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.5) +
scale_colour_brewer(palette = "Set1")+
scale_fill_brewer(palette = "Dark2")+
theme_light()+
theme(legend.position = "none")+
coord_cartesian(expand = F)+
scale_y_log10(labels = scales::comma)+
labs(x = "cell carrying capacity",
y = "mean value")
#### make some plot ####
ggplot(data) +
geom_ribbon(aes(cell_capacity,
ymin = mean + 1 - sd,
ymax = mean + 1 + sd,
group = interaction(repl, layer),
fill = layer),
alpha = 0.2)+
geom_line(aes(cell_capacity, mean + 1,
group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.5) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
theme_light()+
theme(legend.position = "none")+
coord_cartesian(expand = F)+
scale_y_log10(labels = scales::comma)+
labs(x = "cell carrying capacity",
y = "mean value")
#### make some plot ####
ggplot(data) +
geom_ribbon(aes(cell_capacity,
ymin = mean + 1 - sd,
ymax = mean + 1 + sd,
group = interaction(repl, layer),
fill = layer),
alpha = 0.2)+
geom_line(aes(cell_capacity, mean + 1,
group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.5) +
scale_colour_brewer(palette = "Set1")+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme(legend.position = "none")+
coord_cartesian(expand = F)+
scale_y_log10(labels = scales::comma)+
labs(x = "cell carrying capacity",
y = "mean value")
#### make some plot ####
ggplot(data) +
geom_ribbon(aes(cell_capacity,
ymin = mean + 1 - sd,
ymax = mean + 1 + sd,
group = interaction(repl, layer),
fill = layer),
alpha = 0.2)+
geom_line(aes(cell_capacity, mean + 1,
group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.5) +
scale_colour_brewer(palette = "Set1")+
scale_fill_brewer(palette = "Set1")+
theme_linedraw()+
theme(legend.position = "none")+
coord_cartesian(expand = F)+
scale_y_log10(labels = scales::comma)+
labs(x = "cell carrying capacity",
y = "mean value")
#### make some plot ####
ggplot(data) +
geom_ribbon(aes(cell_capacity,
ymin = mean + 1 - sd,
ymax = mean + 1 + sd,
group = interaction(repl, layer),
fill = layer),
alpha = 0.2)+
geom_line(aes(cell_capacity, mean + 1,
group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.5) +
scale_colour_brewer(palette = "Set1")+
scale_fill_brewer(palette = "Set1")+
theme_minimal()+
theme(legend.position = "none")+
coord_cartesian(expand = F)+
scale_y_log10(labels = scales::comma)+
labs(x = "cell carrying capacity",
y = "mean value")
#### make some plot ####
ggplot(data) +
geom_ribbon(aes(cell_capacity,
ymin = mean + 1 - sd,
ymax = mean + 1 + sd,
group = interaction(repl, layer),
fill = layer),
alpha = 0.2)+
geom_line(aes(cell_capacity, mean + 1,
group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.5) +
scale_colour_brewer(palette = "Set1")+
scale_fill_brewer(palette = "Set1")+
theme_minimal()+
theme(legend.position = "none")+
coord_cartesian(expand = F)+
scale_y_log10(labels = scales::comma)+
labs(x = "cell capacity (items)",
y = "mean value")
# get simulation type
type <- c("facultative", "obligate")
# glue data file names together
data_files <- tidyr::crossing(
type,
which_gen,
type,
replicates,
layers
)
# glue data file names together
data_files <- tidyr::crossing(
which_gen,
type,
replicates,
layers
)
data_files
data_files$filepath <- glue_data(.x = data_files,
'{data_folder}/{which_gen}{type}_\\
{replicates}{layers}.txt')
data_files
# split by layer and replicate
data <- data_files %>%
split(data_files$type) %>%
map(function(l) {
l %>%
split(l$layers) %>%
map(function(l) {
l %>%
split(l$replicates) %>%
map(function(r) {
r$filepath
})
})
})
# read in data and get mean of layers per replicate
data <- map_depth(data, 4, read.matrix) %>%
map_depth(3, function(gens) {
reduce(gens, .f = `+`) / length(gens)
})
# convert to dataframe for capacity wise mean
data <- map_depth(data, 3, function(reps) {
# convert with colnames
data_reps <- data.table::data.table(reps)
data.table::setnames(data_reps, as.character(seq_len(512)))
# assign y coord
data_reps[, y := as.character(seq_len(512))]
# now melt
data_reps <- data.table::melt.data.table(data_reps,
id.vars = "y",
variable.name = "x")
# fix x coord
data_reps[, x := as.character(x)]
return(data_reps)
})
# get capacity wise mean
data <- map_depth(data, 3, function(reps) {
# merge capacity
reps <- merge(reps, capacity)
# summarise
reps <- reps[, .(mean = mean(value),
sd = sd(value)),
by = cell_capacity]
})
# assign rep number and layer name
data <- map_depth(data, 2, function(l) {
map2(l, names(l), function(x, y) {
x[, repl := y]
})
}) %>%
map_depth(1, data.table::rbindlist) %>%
imap(function(x, y) {
x[, layer := y]
})
# split by layer and replicate
data <- data_files %>%
split(data_files$type) %>%
map(function(l) {
l %>%
split(l$layers) %>%
map(function(l) {
l %>%
split(l$replicates) %>%
map(function(r) {
r$filepath
})
})
})
# read in data and get mean of layers per replicate
data <- map_depth(data, 4, read.matrix) %>%
map_depth(3, function(gens) {
reduce(gens, .f = `+`) / length(gens)
})
# convert to dataframe for capacity wise mean
data <- map_depth(data, 3, function(reps) {
# convert with colnames
data_reps <- data.table::data.table(reps)
data.table::setnames(data_reps, as.character(seq_len(512)))
# assign y coord
data_reps[, y := as.character(seq_len(512))]
# now melt
data_reps <- data.table::melt.data.table(data_reps,
id.vars = "y",
variable.name = "x")
# fix x coord
data_reps[, x := as.character(x)]
return(data_reps)
})
# get capacity wise mean
data <- map_depth(data, 3, function(reps) {
# merge capacity
reps <- merge(reps, capacity)
# summarise
reps <- reps[, .(mean = mean(value),
sd = sd(value)),
by = cell_capacity]
})
# assign rep number and layer name
data <- map_depth(data, 2, function(l) {
map2(l, names(l), function(x, y) {
x[, repl := y]
})
})# %>%
data <- map_depth(data, 1, data.table::rbindlist)
data <- data_files %>%
split(data_files$type) %>%
map(function(l) {
l %>%
split(l$layers) %>%
map(function(l) {
l %>%
split(l$replicates) %>%
map(function(r) {
r$filepath
})
})
})
# read in data and get mean of layers per replicate
data <- map_depth(data, 4, read.matrix) %>%
map_depth(3, function(gens) {
reduce(gens, .f = `+`) / length(gens)
})
# convert to dataframe for capacity wise mean
data <- map_depth(data, 3, function(reps) {
# convert with colnames
data_reps <- data.table::data.table(reps)
data.table::setnames(data_reps, as.character(seq_len(512)))
# assign y coord
data_reps[, y := as.character(seq_len(512))]
# now melt
data_reps <- data.table::melt.data.table(data_reps,
id.vars = "y",
variable.name = "x")
# fix x coord
data_reps[, x := as.character(x)]
return(data_reps)
})
# get capacity wise mean
data <- map_depth(data, 3, function(reps) {
# merge capacity
reps <- merge(reps, capacity)
# summarise
reps <- reps[, .(mean = mean(value),
sd = sd(value)),
by = cell_capacity]
})
# assign rep number and layer name
data2 <- map_depth(data, 2, function(l) {
map2(l, names(l), function(x, y) {
x[, repl := y]
})
})
data <- map_depth(data2, 2, data.table::rbindlist)
data[[1]]
data[[1]][[1]]
# assign layer and sim type names
data2 <- imap(data, function(x, y) {
map2(x, names(x), function(z, w) {
z[, `:=` (type = y,
layer = w)]
})
})
# assign layer and sim type names
data <- imap(data, function(x, y) {
map2(x, names(x), function(z, w) {
z[, `:=` (type = y,
layer = w)]
})
})
# get final data for plotting
data <- map(data, rbindlist) %>%
rbindlist()
data
data[, layer := forcats::fct_relevel(layer,
c("klepts", "foragers", "items"))]
#### make some plot ####
ggplot(data) +
geom_ribbon(aes(cell_capacity,
ymin = mean + 1 - sd,
ymax = mean + 1 + sd,
group = interaction(repl, layer),
fill = layer),
alpha = 0.2)+
geom_line(aes(cell_capacity, mean + 1,
group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.5) +
scale_colour_brewer(palette = "Set1")+
scale_fill_brewer(palette = "Set1")+
theme_minimal()+
theme(legend.position = "none")+
facet_grid(~ type)+
coord_cartesian(expand = F)+
scale_y_log10(labels = scales::comma)+
labs(x = "cell capacity (items)",
y = "mean value")
#### make some plot ####
ggplot(data) +
geom_ribbon(aes(cell_capacity,
ymin = mean + 1 - sd,
ymax = mean + 1 + sd,
group = interaction(repl, layer),
fill = layer),
alpha = 0.2)+
geom_line(aes(cell_capacity, mean + 1,
group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.5) +
scale_colour_brewer(palette = "Set1")+
scale_fill_brewer(palette = "Set1")+
theme_grey()+
theme(legend.position = "none")+
facet_grid(~ type)+
coord_cartesian(expand = F)+
scale_y_log10(labels = scales::comma)+
labs(x = "cell capacity (items)",
y = "mean value")
#### make some plot ####
ggplot(data) +
geom_ribbon(aes(cell_capacity,
ymin = mean + 1 - sd,
ymax = mean + 1 + sd,
group = interaction(repl, layer),
fill = layer),
alpha = 0.2)+
geom_line(aes(cell_capacity, mean + 1,
group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.5) +
scale_colour_brewer(palette = "Set1")+
scale_fill_brewer(palette = "Set1")+
theme_grey()+
theme(legend.position = "none")+
facet_grid(~ type)+
coord_cartesian(expand = F)+
scale_y_sqrt(labels = scales::comma)+
labs(x = "cell capacity (items)",
y = "mean value")
#### make some plot ####
ggplot(data) +
geom_ribbon(aes(cell_capacity,
ymin = mean + 1 - sd,
ymax = mean + 1 + sd,
group = interaction(repl, layer),
fill = layer),
alpha = 0.2)+
geom_line(aes(cell_capacity, mean + 1,
group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.5) +
scale_colour_brewer(palette = "Set1")+
scale_fill_brewer(palette = "Set1")+
theme_grey()+
theme(legend.position = "none")+
facet_grid(~ type)+
coord_cartesian(expand = F)+
scale_y_log10(labels = scales::comma)+
labs(x = "cell capacity (items)",
y = "mean value")
#### make some plot ####
ggplot(data) +
geom_ribbon(aes(cell_capacity,
ymin = mean + 1 - sd,
ymax = mean + 1 + sd,
group = interaction(repl, layer),
fill = layer),
alpha = 0.2)+
geom_line(aes(cell_capacity, mean + 1,
group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.5) +
scale_colour_brewer(palette = "Set1")+
scale_fill_brewer(palette = "Set1")+
theme_grey()+
theme(legend.position = "none")+
facet_grid(~ type)+
coord_cartesian(expand = F)+
scale_y_log10(labels = scales::comma - 1)+
labs(x = "cell capacity (items)",
y = "mean value")
#### make some plot ####
ggplot(data) +
geom_ribbon(aes(cell_capacity,
ymin = mean + 1 - sd,
ymax = mean + 1 + sd,
group = interaction(repl, layer),
fill = layer),
alpha = 0.2)+
geom_line(aes(cell_capacity, mean + 1,
group = interaction(repl, layer),
col = layer),
size = 1, alpha = 0.5) +
scale_colour_brewer(palette = "Set1")+
scale_fill_brewer(palette = "Set1")+
theme_grey()+
theme(legend.position = "none")+
facet_grid(~ type)+
coord_cartesian(expand = F)+
scale_y_log10(breaks = c(1, 10, 100),
labels = c(0, 10, 100))+
labs(x = "cell capacity (items)",
y = "mean value")
